@using DeusVultClicker.Client.Services
@using System.Threading
<header><h1>Deus Vult Clicker</h1></header>
<main>
   <Grid IncrementFaith="@IncrementFaith" IncrementFollowers="@IncrementFollowers"></Grid>
</main>
<footer>Footer</footer>
<style>
    main {
        flex: 1;
    }
</style>

@code
{
    private int intervalInMs = 50;

    [Inject]
    private BuildingService BuildingService { get; set; }

    [Inject]
    private StateView StateView { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        var timer = new Timer(a => TimerOnElapsed(), null, 0, intervalInMs);
    }

    private Task TimerOnElapsed()
    {
        SetFaithOnNextTick();
        SetMoneyOnNextTick();
        //SetFollowersOnNextTick();
        this.StateHasChanged();
        return Task.CompletedTask;
    }

    public void IncrementFaith()
    {
        StateView.State.Faith++;
    }

    public void IncrementFollowers()
    {
        if (StateView.State.Followers < BuildingService.Reach && new Random().NextDouble() < 0.3)
        {
            StateView.State.Followers++;
        }
    }

    private void SetFaithOnNextTick()
    {
        StateView.State.Faith += StateView.State.Followers * ToTickValue(StateView.State.FaithPerSecondModifier);
    }

    private void SetMoneyOnNextTick()
    {
        StateView.State.Money += StateView.State.Followers * ToTickValue(StateView.State.MoneyPerSecondModifier);
    }

    private double ToTickValue(double valuePerSecond)
    {
        return valuePerSecond / (1000d / intervalInMs);
    }

}
